plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	id "com.github.node-gradle.node" version "3.2.1"
}

group = 'com.induk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

/**
 * npm install start
 */
node {
    version = '16.14.2' //자신이 사용하는 노드 버전
    download = true
	nodeModulesDir = file("${projectDir}/src/main/resources/static")
}

task copyFrontLib(type: Copy) {
	from "${projectDir}/src/main/resources/static"
	into "${projectDir}/build/resources/main/static/."
}

copyFrontLib.dependsOn npmInstall
compileJava.dependsOn copyFrontLib

/**
 * npm install end
 */

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 추가
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl'

	// spring security
	//	implementation 'org.springframework.boot:spring-boot-starter-security'

	compileOnly 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.aspectj:aspectjrt:1.9.6'
	implementation 'org.aspectj:aspectjweaver:1.9.6'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	implementation 'junit:junit:4.12'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java:8.0.25'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testCompileOnly("org.mybatis.spring.boot:mybatis-spring-boot-starter-test:2.1.3")

}

test {
	useJUnitPlatform()
}
